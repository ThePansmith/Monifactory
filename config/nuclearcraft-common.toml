
[Processor]
	#Ticks
	base_time = 240
	#FE per Tick
	#Better use value multiple of 8
	base_power = 100
	#Generally used for server optimization. Processors will skip defined amount of ticks then and do nothing.
	#This won't affect recipe production performance
	#Let's say it will skip 2 ticks, and then it will multiply recipe progress by amount if skipped ticks.
	#So it won't do the job each tick. But production will be the same as if it was done each tick.
	#This only works if processor has recipe in work
	#May lead to unknown issues, Please test first
	#Range: 0 ~ 10
	skip_ticks = 0
	#Allow processor registration: rock_crusher, decay_hastener, irradiator, nuclear_furnace, extractor, electrolyzer, pressurizer, alloy_smelter, melter, analyzer, ingot_former, pump, fuel_reprocessor, leacher, crystallizer, assembler, steam_turbine, supercooler, centrifuge, chemical_reactor, fluid_infuser, isotope_separator, fluid_enricher, gas_scrubber, manufactory
	register_processor = [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true]
	#Processor power: rock_crusher, decay_hastener, irradiator, nuclear_furnace, extractor, electrolyzer, pressurizer, alloy_smelter, melter, analyzer, ingot_former, pump, fuel_reprocessor, leacher, crystallizer, assembler, steam_turbine, supercooler, centrifuge, chemical_reactor, fluid_infuser, isotope_separator, fluid_enricher, gas_scrubber, manufactory
	processor_power = [20, 20, 0, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20]
	#Time for processor to proceed recipe: rock_crusher, decay_hastener, irradiator, nuclear_furnace, extractor, electrolyzer, pressurizer, alloy_smelter, melter, analyzer, ingot_former, pump, fuel_reprocessor, leacher, crystallizer, assembler, steam_turbine, supercooler, centrifuge, chemical_reactor, fluid_infuser, isotope_separator, fluid_enricher, gas_scrubber, manufactory
	processor_time = [200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200]
	#GT EU Amperage
	gteu_amperage = 2
	#GT EU direct support enabled?
	#0 - disabled, 1 - enabled EU and FE, 2 - EU only
	gteu_support = 1
	#Enable explosion on wrong GE EU amperage
	gteu_explode = false

#Settings for ore generation
[ores]
	#List of dimensions to generate ores: lithium, platinum, thorium, tin, magnesium, silver, cobalt, uranium, zinc, boron, lead
	dimensions = []
	#Enable ore registration: lithium, platinum, thorium, tin, magnesium, silver, cobalt, uranium, zinc, boron, lead
	register_ore = [false, false, false, false, false, false, false, false, false, false, false]
	#Ore blocks per vein. Order: lithium, platinum, thorium, tin, magnesium, silver, cobalt, uranium, zinc, boron, lead
	vein_size = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
	#Veins in chunk. Order: lithium, platinum, thorium, tin, magnesium, silver, cobalt, uranium, zinc, boron, lead
	veins_in_chunk = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
	#Minimal generation height. Order: lithium, platinum, thorium, tin, magnesium, silver, cobalt, uranium, zinc, boron, lead
	min_height = [-67, -67, -67, -67, -67, -67, -67, -67, -67, -67, -67]
	#Max generation height. Order: lithium, platinum, thorium, tin, magnesium, silver, cobalt, uranium, zinc, boron, lead
	max_height = [-66, -66, -66, -66, -66, -66, -66, -66, -66, -66, -66]

#Settings for reactor fuel
[reactor_fuel]
	#Heat multiplier for boiling reactor.
	heat_multiplier = 3.24444444
	#Depletion multiplier. Affects how long fuel lasts.
	#Range: 0.0 ~ 1000.0
	depletion_multiplier = 100.0
	#Base Fuel Heat: len-236, lep-241, mix-239, leb-248, tbu, lea-242, lecm-245, hecf-251, lecm-247, hep-241, hecm-245, mix-241, hecm-247, lep-239, hen-236, lecm-243, hecm-243, leu-233, leu-235, hea-242, lecf-251, lecf-249, heb-248, heu-235, heu-233, hecf-249, hep-239
	base_heat = [45.0, 87.5, 71.875, 65.0, 22.5, 117.5, 85.0, 900.0, 67.5, 525.0, 510.0, 121.875, 405.0, 50.0, 270.0, 140.0, 840.0, 75.0, 62.5, 705.0, 150.0, 145.0, 390.0, 375.0, 450.0, 870.0, 300.0]
	#Base Fuel Efficiency: len-236, lep-241, mix-239, leb-248, tbu, lea-242, lecm-245, hecf-251, lecm-247, hep-241, hecm-245, mix-241, hecm-247, lep-239, hen-236, lecm-243, hecm-243, leu-233, leu-235, hea-242, lecf-251, lecf-249, heb-248, heu-235, heu-233, hecf-249, hep-239
	base_efficiency = [104, 119, 100, 157, 119, 128, 142, 176, 147, 123, 147, 109, 152, 142, 109, 138, 142, 104, 95, 133, 171, 166, 161, 100, 109, 171, 138]
	#Base Fuel Depletion Time (seconds): len-236, lep-241, mix-239, leb-248, tbu, lea-242, lecm-245, hecf-251, lecm-247, hep-241, hecm-245, mix-241, hecm-247, lep-239, hen-236, lecm-243, hecm-243, leu-233, leu-235, hea-242, lecf-251, lecf-249, heb-248, heu-235, heu-233, hecf-249, hep-239
	base_depletion = [89, 143, 198, 98, 654, 67, 109, 90, 98, 143, 109, 137, 98, 208, 89, 68, 68, 120, 218, 83, 90, 48, 83, 218, 120, 48, 208]
	#Fuel Criticality: len-236, lep-241, mix-239, leb-248, tbu, lea-242, lecm-245, hecf-251, lecm-247, hep-241, hecm-245, mix-241, hecm-247, lep-239, hen-236, lecm-243, hecm-243, leu-233, leu-235, hea-242, lecf-251, lecf-249, heb-248, heu-235, heu-233, hecf-249, hep-239
	base_criticallity = [77, 92, 103, 80, 257, 71, 82, 38, 79, 46, 40, 88, 39, 108, 38, 72, 36, 85, 112, 35, 78, 66, 35, 56, 42, 33, 53]

#Settings for heat sinks
[heat_sink]
	#Cooling rate H/t: prismarine, aluminum, manganese, glowstone, netherite, slime, gold, liquid_nitrogen, lithium, carobbiite, enderium, end_stone, tin, copper, fluorite, lapis, obsidian, purpur, cryotheum, villiaumite, magnesium, quartz, arsenic, liquid_helium, nether_brick, water, lead, diamond, iron, silver, boron, emerald, redstone
	cooling_rate = [115.0, 175.0, 150.0, 130.0, 150.0, 145.0, 120.0, 185.0, 130.0, 140.0, 120.0, 40.0, 120.0, 80.0, 160.0, 120.0, 40.0, 95.0, 160.0, 180.0, 110.0, 90.0, 135.0, 140.0, 70.0, 60.0, 60.0, 150.0, 80.0, 170.0, 160.0, 160.0, 90.0]
	#You can define blocks by block_name. So water_heat_sink will fall back to nuclearcraft:water_heat_sink. Or qualify it with namespace like some_mod:some_block.
	#Or use block tag key. #nuclearcraft:fission_reactor_casing will fall back to blocks with this tag. Do not forget to put #.
	#if you need AND condition, add comma separated values "block1", "block2" means AND condition
	#if you need OR condition, use | separator. "block1|block2" means block1 or block2
	#By default you have rule condition is 'At least 1'. So if you define some block, it will go in the rule as 'at least 1'
	#Validation options: >2 means at least 2 (use any number)
	#-2 means between, it is always 2 (opposite sides)
	#<2 means less than 2 (use any number)
	#=2 means exact 2 (use any number)
	#^3 means 3 blocks in the corner (shared vertex or edge). possible values 2 and 3
	#Default placement rules have all examples
	placement_explanations = ""
	prismarine = ["water_heat_sink"]
	aluminum = ["quartz_heat_sink", "lapis_heat_sink"]
	manganese = ["fission_reactor_solid_fuel_cell>2"]
	glowstone = ["#nuclearcraft:moderators>2"]
	netherite = ["obsidian_heat_sink", "fission_reactor_irradiation_chamber"]
	slime = ["water_heat_sink", "lead_heat_sink"]
	gold = ["water_heat_sink", "redstone_heat_sink"]
	liquid_nitrogen = ["copper_heat_sink", "purpur_heat_sink"]
	lithium = ["lead_heat_sink-2"]
	carobbiite = ["end_stone_heat_sink", "fission_reactor_irradiation_chamber"]
	enderium = ["#nuclearcraft:fission_reactor_casing^3"]
	end_stone = ["enderium_heat_sink"]
	tin = ["lapis_heat_sink-2"]
	copper = ["glowstone_heat_sink"]
	fluorite = ["gold_heat_sink", "prismarine_heat_sink"]
	lapis = ["fission_reactor_solid_fuel_cell", "#nuclearcraft:fission_reactor_casing"]
	obsidian = ["glowstone_heat_sink-2"]
	purpur = ["#nuclearcraft:fission_reactor_casing", "iron_heat_sink"]
	cryotheum = ["fission_reactor_solid_fuel_cell>2"]
	villiaumite = ["redstone_heat_sink", "end_stone_heat_sink"]
	magnesium = ["#nuclearcraft:fission_reactor_casing", "#nuclearcraft:moderators"]
	quartz = ["#nuclearcraft:moderators"]
	arsenic = ["#nuclearcraft:moderators>3"]
	liquid_helium = ["redstone_heat_sink", "#nuclearcraft:fission_reactor_casing"]
	nether_brick = ["obsidian_heat_sink"]
	water = ["fission_reactor_solid_fuel_cell|#nuclearcraft:moderators"]
	lead = ["iron_heat_sink"]
	diamond = ["copper_heat_sink", "quartz_heat_sink"]
	iron = ["gold_heat_sink"]
	silver = ["glowstone_heat_sink>2", "tin_heat_sink|fission_reactor_irradiation_chamber"]
	boron = ["quartz_heat_sink", "#nuclearcraft:fission_reactor_casing|#nuclearcraft:moderators"]
	emerald = ["fission_reactor_solid_fuel_cell", "#nuclearcraft:moderators"]
	redstone = ["fission_reactor_solid_fuel_cell"]

#Settings for Fusion Reactor
[fusion_reactor]
	#Min reactor size.
	#Range: 1 ~ 24
	min_size = 1
	#Max reactor size.
	#Range: 3 ~ 48
	max_size = 32
	#Explosion size if reactor overheats. 4 - TNT size. Set to 0 to disable explosion.
	#Range: 0.0 ~ 20.0
	reactor_explosion_radius = 4.0
	#Minimal magnetic field required to operate reactor. (Depends on reactor size).
	#Range: 1.0 ~ 100.0
	minimal_magnetic_field = 10.0
	#Affects heating rate for plasma by rf amplifiers.
	#Range: 0.01 ~ 100.0
	rf_amplification_multiplier = 4.0
	#Affects plasma energy to FE converion rate.
	#Range: 0.01 ~ 10.0
	plasma_to_energy_convertion = 1.0

#Settings for Fission Reactor
[fission_reactor]
	#Reactor min size.
	#Range: 3 ~ 24
	min_size = 3
	#Reactor max size.
	#Range: 5 ~ 24
	max_size = 24
	#Explosion size if reactor overheats. 4 - TNT size. Set to 0 to disable explosion.
	#Range: 0.0 ~ 20.0
	reactor_explosion_radius = 4.0
	#How much reactor may collect heat before meltdown.
	#Range: 1000.0 ~ 1.0E8
	heat_capacity = 1000000.0
	#Affects how relation of reactor cooling and heating affects to FE generation.
	#Range: 0.01 ~ 20.0
	heat_multiplier = 1.0
	#Limit for heat_multiplier max value.
	#Range: 0.01 ~ 3.0
	heat_multiplier_cap = 3.0
	#Each attachment of moderator to fuel cell will increase fuel FE generation by given percent value.
	#Range: 0.0 ~ 1000.0
	moderator_fe_multiplier = 16.67
	#Each attachment of moderator to fuel cell will increase fuel heat generation by given percent value.
	#Range: 0.0 ~ 1000.0
	moderator_heat_multiplier = 33.34
	#Rate at which steam recipes produced.
	#Range: 0.01 ~ 1000000.0
	boiling_mult = 5.0

#Settings for Radiation
[radiation]
	#If radiation is enabled.
	enabled = true
	#General background radiation everywhere (pRad).
	#Total radiation = background_radiation + dimension_radiation + chunk_radiation + in-game exposure
	#Range: 0 ~ 10000
	background_radiation = 50
	#Spread multiplier. How much radiation spreads from chunk to chunk per simulation. Bigger values might cause lag.
	#Range: 0.01 ~ 0.9
	spread_multiplier = 0.3
	#If chunk radiation (uRad) less than this value it won't affect chunks nearby.
	#Bigger values - less lag, but less accurate radiation spread.
	#Range: 100 ~ 100000
	spread_gate = 1000
	#How fast contamination decays (pRad/s).
	#Range: 1000 ~ 10000
	decay_speed = 1500
	#How fast contamination decays in player's body (uRad/s).
	#Range: 1 ~ 5000
	decay_speed_for_player = 50
	#Rate at which player gets radiation dose.
	#Range: 0.0 ~ 5.0
	gain_speed_for_player = 0.015
	#List of items what cleans player radiation when used (pRad). Format: item_id|radiation
	radiation_removal_items = ["minecraft:golden_carrot|500000", "minecraft:golden_apple|20000000", "minecraft:enchanted_golden_apple|100000000", "nuclearcraft:dominos|50000000", "nuclearcraft:moresmore|100000000", "nuclearcraft:evenmoresmore|200000000", "nuclearcraft:radaway|300000000"]
	#List of items what have radiation (pRad). Format: item_id|radiation
	items_radiation = ["nuclearcraft:spaxelhoe_thorium|50000", "mekanism:pellet_polonium|4000000", "mekanism:pellet_plutonium|2500000", "mekanism:reprocessed_fissile_fragment|1800000"]
	#List of armor items and default shielding lvl. Format: item_id|radiation
	armor_shielding = ["mekanism:hazmat_mask|3", "mekanism:hazmat_gown|5", "mekanism:hazmat_pants|4", "mekanism:hazmat_boots|3", "mekanism:mekasuit_helmet|5", "mekanism:mekasuit_bodyarmor|5", "mekanism:mekasuit_pants|5", "mekanism:mekasuit_boots|5", "nuclearcraft:hazmat_mask|3", "nuclearcraft:hazmat_chest|5", "nuclearcraft:hazmat_pants|4", "nuclearcraft:hazmat_boots|3", "nuclearcraft:hev_helmet|5", "nuclearcraft:hev_chest|7", "nuclearcraft:hev_pants|6", "nuclearcraft:hev_boots|5"]
	#Natural radiation per biome: uRad
	#Format: biome_id|radiation
	biome_radiation = ["nuclearcraft:wasteland|2000", "minecraft:nether_wastes|500"]
	#Natural radiation per dimension: uRad
	#Format: dim_id|radiation
	dimension_radiation = ["nuclearcraft:wasteland|200000", "minecraft:the_nether|1000"]
	#Interval between radiation updates in ticks. 20 ticks = 1 second.
	#Bigger interval - less lag, but less accurate radiation spread.
	#Range: 2 ~ 1000
	update_interval = 40
	#NC radiation sources will generate mekanism radiation and wise-versa.
	#You can disable mekanism radiation, but radiation sources in mekanism still will generate NC radiation.
	#You can disable NC radiation, but NC radiation sources still will generate mekanism radiation.
	mekanism_radiation_integration = true

[energy_generation]
	#Allow rtg registration: uranium_rtg, americium_rtg, plutonium_rtg, californium_rtg
	register_panel = [true, true, true, true]
	#Panel power generation: du, elite, advanced, basic
	panel_power = [400, 1500, 100, 25]
	#rtg generation: uranium_rtg, americium_rtg, plutonium_rtg, californium_rtg
	rtg_power = [20, 200, 800, 4000]
	#rtg radiation: uranium_rtg, americium_rtg, plutonium_rtg, californium_rtg
	rtg_radiation = [56, 57800, 200000, 1900000]
	#Steam turbine (one block) base power gen
	steam_turbine_power_gen = 50

#Settings for Electromagnets
[electromagnets]
	#If Electromagnets are registered.
	registered = [true, true, true, true, true]
	#Power consumption (FE/t): niobium_tin_electromagnet, magnesium_diboride_electromagnet, bscco_electromagnet, niobium_titanium_electromagnet, basic_electromagnet
	power = [1500, 1000, 3000, 2000, 500]
	#Magnetic field strength: niobium_tin_electromagnet, magnesium_diboride_electromagnet, bscco_electromagnet, niobium_titanium_electromagnet, basic_electromagnet
	heat = [1.0, 0.5, 4.0, 2.0, 0.25]

#Settings for RF Amplifiers
[rf_amplifiers]
	#If RF Amplifier are registered.
	registered = [true, true, true, true, true]
	#Power consumption (FE/t): basic_rf_amplifier, niobium_titanium_rf_amplifier, magnesium_diboride_rf_amplifier, niobium_tin_rf_amplifier, bscco_rf_amplifier
	power = [250, 1500, 500, 750, 2500]
	#Heat generation: basic_rf_amplifier, niobium_titanium_rf_amplifier, magnesium_diboride_rf_amplifier, niobium_tin_rf_amplifier, bscco_rf_amplifier
	heat = [300, 2260, 500, 1140, 4500]
	#Amplification Voltage: basic_rf_amplifier, niobium_titanium_rf_amplifier, magnesium_diboride_rf_amplifier, niobium_tin_rf_amplifier, bscco_rf_amplifier
	voltage = [500000, 3000000, 1000000, 2000000, 4000000]

[energy_storage]
	#Allow block registration: basic_voltaic_pile, elite_voltaic_pile, advanced_voltaic_pile, basic_lithium_ion_battery, elite_lithium_ion_battery, du_lithium_ion_battery, du_voltaic_pile, advanced_lithium_ion_battery
	energy_block_registration = [true, true, true, true, true, true, true, true]
	#Storage: basic_voltaic_pile, elite_voltaic_pile, advanced_voltaic_pile, basic_lithium_ion_battery, elite_lithium_ion_battery, du_lithium_ion_battery, du_voltaic_pile, advanced_lithium_ion_battery
	energy_block_storage = [1600000, 102400000, 6400000, 32000000, 2048000000, 512000000, 25600000, 128000000]
	lithium_ion_battery_storage = 1000000
	qnp_energy_storage = 2000000
	qnp_energy_per_block = 200

[storage_blocks]
	#Blocks to store items, fluids, etc...
	#Allow barrel registration: advanced_barrel, basic_barrel, elite_barrel, du_barrel
	energy_block_registration = [true, true, true, true]
	#Barrel capacity in Buckets: advanced_barrel, basic_barrel, elite_barrel, du_barrel
	barrel_capacity = [512000, 128000, 8192000, 2048000]

#Settings for items registration
[material_products]
	#List of available slurries (dissolved ores in acid)
	#Color for slurry will be calculate from average texture color
	#Texture location has to be: nuclearcraft:textures/block/ore/(slurry_name)_ore.png
	#If no texture found it will generate random color
	register_slurries = ["uranium", "iron", "gold", "aluminum", "thorium", "boron", "silver", "lead", "tin", "copper", "zinc", "cobalt", "platinum", "lithium", "magnesium"]
	#Enable chunk registration: lithium, platinum, thorium, tin, magnesium, silver, cobalt, uranium, zinc, boron, lead
	register_chunk = [true, true, true, true, true, true, true, true, true, true, true]
	#Enable ingots registration: manganese_oxide, niobium_tin, graphite, lithium, platinum, tungsten, zircaloy, yttrium, thermoconducting, thorium, zirconium_molybdenum, tin, palladium, beryllium, silicon_carbide, zinc, carbon_manganese, extreme, shibuichi, tungsten_carbide, stainless_steel, magnesium, bronze, sodium, tin_silver, pyrolitic_carbon, manganese_dioxide, silver, uranium, niobium_titanium, tough_alloy, steel, potassium, ferroboron, titanium, super_alloy, cobalt, aluminum, manganese, sic_sic_cmc, hard_carbon, niobium, zirconium, electrum, chromium, calcium, strontium, osmium, lithium_manganese_dioxide, lead, osmiridium, lead_platinum, hsla_steel, nichrome, boron, magnesium_diboride, hafnium
	register_ingot = [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true]
	#Enable plate registration: tough_alloy, steel, ferroboron, cobalt, aluminum, graphite, manganese, sic_sic_cmc, netherite, lithium, platinum, thermoconducting, thorium, hard_carbon, tin, palladium, copper, beryllium, zirconium, zinc, extreme, electrum, magnesium, lithium_manganese_dioxide, lead, bronze, iron, silver, hsla_steel, uranium, boron
	register_plate = [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true]
	#Enable dust registration: barium, germanium, tungsten, zircaloy, yttrium, thermoconducting, thorium, zirconium_molybdenum, palladium, sulfur, fluorite, lapis, silicon_carbide, zinc, carbon_manganese, molybdenum, purpur, borax, magnesium, bronze, manganese_dioxide, silver, boron_nitride, gadolinium, tough_alloy, steel, ferroboron, cobalt, strontium_90, potassium_hydroxide, alugentum, aluminum, manganese, sic_sic_cmc, protactinium_233, gold, europium_155, hard_carbon, end_stone, niobium, yellowcake, copper, iodine, zirconium, electrum, caesium_137, strontium, rhodochrosite, lead, boron_arsenide, neodymium, lead_platinum, crystal_binder, charcoal, hafnium, sodium_hydroxide, manganese_oxide, samarium, erbium, radium, bscco, graphite, netherite, lithium, platinum, carobbiite, tin, beryllium, ruthenium_106, extreme, shibuichi, obsidian, polonium, arsenic, energetic_blend, sodium, tin_silver, pyrolitic_carbon, potassium_fluoride, coal, uranium, emerald, c_mn_blend, potassium, tbp, ytterbium, titanium, dimensional_blend, thallium, enderium, sodium_fluoride, irradiated_borax, terbium, calcium_sulfate, chromium, promethium_147, calcium, potassium_iodide, villiaumite, osmium, lithium_manganese_dioxide, quartz, diamond, iron, hsla_steel, boron, bismuth
	register_dust = [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true]
	#Enable nuggets registration: steel, electrum, magnesium, cobalt, aluminum, lead, bronze, lithium, platinum, thorium, tin, beryllium, silver, uranium, zirconium, zinc, boron
	register_nugget = [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true]
	#Enable gems registration: boron_arsenide, carobbiite, silicon, villiaumite, fluorite, rhodochrosite, boron_nitride
	register_block = [true, true, true, true, true, false, true]

#Forge Tag priority
[forge_tag_priority]
	#Priority of mods to resolve forge tags to itemstack.
	mods_priority = ["nuclearcraft", "mekanism", "immersiveengineering", "tconstruct"]

#Settings for In situ leaching
[in_situ_leaching]
	#Enable veins generation.
	enable_veins = true
	#Min and max values of blocks per vein.
	#Result amount will be random value in this range.
	blocks_per_vein = [30000, 70000]
	#Veins rarity. Bigger value - less veins.
	#Range: 1 ~ 5000
	veins_rarity = 100
	#All veins will have random ores. It will ignore vein settings
	randomized_ores = false
	#Add new veins to generation for Immersive Engineering.
	add_ie_veins = true
	#Allow to leach veins from Immersive Engineering.
	#To do so, you need to put IE core sample into leacher.
	allow_to_leach_ie_veins = true

[Dimension]
	#Register Wasteland Dimension
	wasteland = true
	#Dimension ID for Wasteland
	wastelandID = -4848

#Settings for Turbine
[turbine]
	#Multiblock min size.
	#Range: 5 ~ 25
	min_size = 5
	#Multiblock max size.
	#Range: 5 ~ 25
	max_size = 24
	#Steam flow per blade mB/t
	#Range: 100 ~ 1000000
	blade_flow = 2000
	#Efficiency %: gold, aluminium, copper, magnesium, beryllium, silver
	efficiency = [104.0, 98.0, 110.0, 86.0, 90.0, 112.0]
	#You can define blocks by block_name. So copper_turbine_coil will fall back to nuclearcraft:copper_turbine_coil. Or qualify it with namespace like some_mod:some_block.
	#Or use block tag key. #nuclearcraft:fission_reactor_casing will fall back to blocks with this tag. Do not forget to put #.
	#if you need AND condition, add comma separated values "block1", "block2" means AND condition
	#if you need OR condition, use | separator. "block1|block2" means block1 or block2
	#By default you have rule condition is 'At least 1'. So if you define some block, it will go in the rule as 'at least 1'
	#Validation options: >2 means at least 2 (use any number)
	#-2 means between, it is always 2 (opposite sides)
	#<2 means less than 2 (use any number)
	#=2 means exact 2 (use any number)
	#^3 means 3 blocks in the corner (shared vertex or edge). possible values 2 and 3
	#Default placement rules have all examples
	placement_explanations = ""
	gold = ["turbine_beryllium_coil"]
	aluminium = ["turbine_gold_coil|turbine_magnesium_coil|turbine_beryllium_coil|turbine_gold_coil|turbine_copper_coil"]
	copper = ["turbine_gold_coil"]
	magnesium = ["turbine_bearing"]
	beryllium = ["turbine_magnesium_coil"]
	silver = ["turbine_magnesium_coil", "turbine_gold_coil"]

